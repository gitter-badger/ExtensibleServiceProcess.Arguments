<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExtensibleServiceProcess</name>
    </assembly>
    <members>
        <member name="T:ExtensibleServiceProcess.ExtensibleServiceBase">
            <summary>
            Provides a base class for an extensible service that will exist as part of a service application.
            </summary>
        </member>
        <member name="P:ExtensibleServiceProcess.ExtensibleServiceBase.AllowMultipleServiceStarts">
            <summary>
            Gets or sets a value indicating whether multiple service starts are allowed.
            </summary>
            <value><c>true</c> if [allow multiple service starts]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ExtensibleServiceProcess.ExtensibleServiceBase.Modules">
            <summary>
            Gets the service modules.
            </summary>
            <value>The modules.</value>
        </member>
        <member name="P:ExtensibleServiceProcess.ExtensibleServiceBase.IsNewInstance">
            <summary>
            Gets a value indicating whether this instance is a new instance.
            </summary>
            <value><c>true</c> if this instance is a new instance; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ExtensibleServiceProcess.ExtensibleServiceBase.ServiceDescription">
            <summary>
            Gets or sets the service description.
            </summary>
            <value>The service description.</value>
        </member>
        <member name="P:ExtensibleServiceProcess.ExtensibleServiceBase.ServiceDisplayName">
            <summary>
            Gets or sets the display name of the service.
            </summary>
            <value>The display name of the service.</value>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.InstallService(System.ServiceProcess.ServiceAccount,System.String,System.String)">
            <summary>
            Installs the service.
            </summary>
            <param name="accountType">Type of the account under which to run this service application.</param>
            <param name="userName">The user account under which the service application will run.</param>
            <param name="password">The password associated with the user account under which the service application will run.</param>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.OnContinue">
            <summary>
            Called when the service continues.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.OnCustomCommand(System.Int32)">
            <summary>
            Called when a custom command is encountered.
            </summary>
            <param name="command">The command code.</param>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.OnPause">
            <summary>
            Called when the service is paused.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.OnShutdown">
            <summary>
            Called when service shutdown is encountered..
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.OnStart(System.String[])">
            <summary>
            Called when the service starts.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.OnStop">
            <summary>
            Called when the service stops.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.StartService">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.StopService">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ExtensibleServiceBase.UninstallService">
            <summary>
            Uninstalls the service.
            </summary>
        </member>
        <member name="T:ExtensibleServiceProcess.IServiceModule">
            <summary>
            A module representing a service that will exist as part of a service application. 
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.IServiceModule.OnContinueAsync">
            <summary>
            Called when the service continues.
            </summary>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:ExtensibleServiceProcess.IServiceModule.OnCustomCommandAsync(System.Int32)">
            <summary>
            Called when a custom command is encountered.
            </summary>
            <param name="command">The command code.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:ExtensibleServiceProcess.IServiceModule.OnPauseAsync">
            <summary>
            Called when the service is paused.
            </summary>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:ExtensibleServiceProcess.IServiceModule.OnShutdownAsync">
            <summary>
            Called when service shutdown is encountered.
            </summary>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:ExtensibleServiceProcess.IServiceModule.OnStartAsync(System.String[])">
            <summary>
            Called when the service starts.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:ExtensibleServiceProcess.IServiceModule.OnStopAsync">
            <summary>
            Called when the service stops.
            </summary>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:ExtensibleServiceProcess.ServiceDescriptionAttribute">
            <summary>
            Specifies the service application description. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ServiceDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtensibleServiceProcess.ServiceDescriptionAttribute"/> class.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="P:ExtensibleServiceProcess.ServiceDescriptionAttribute.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:ExtensibleServiceProcess.ServiceDisplayNameAttribute">
            <summary>
            Specifies the service application display name. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ServiceDisplayNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtensibleServiceProcess.ServiceDisplayNameAttribute"/> class.
            </summary>
            <param name="displayName">The display name.</param>
        </member>
        <member name="P:ExtensibleServiceProcess.ServiceDisplayNameAttribute.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="T:ExtensibleServiceProcess.ServiceNameAttribute">
            <summary>
            Specifies the service application name. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:ExtensibleServiceProcess.ServiceNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtensibleServiceProcess.ServiceNameAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:ExtensibleServiceProcess.ServiceNameAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
    </members>
</doc>
